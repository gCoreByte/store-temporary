{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx", "../../../app/components/product-card.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1732343472000.9995\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"../db.server\";\nimport ProductCard from \"../components/product-card\";\nexport async function loader({\n  request\n}) {\n  const products = await prisma.product.findMany({\n    include: {\n      variants: true\n    }\n  });\n  return json({\n    products\n  });\n}\nexport default function Index() {\n  _s();\n  const {\n    products\n  } = useLoaderData();\n  return <div className=\"container py-8\">\n      <h1 className=\"text-4xl font-bold mb-8\">Featured Products</h1>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {products.map(product => <ProductCard key={product.id} product={product} />)}\n      </div>\n    </div>;\n}\n_s(Index, \"myEvnF20fcYyfWpqSQ3PXWXvEBg=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/product-card.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/product-card.tsx\");\n  import.meta.hot.lastModified = \"1732335502000\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nexport default function ProductCard({\n  product\n}) {\n  const lowestPrice = Math.min(...product.variants.map(v => v.price));\n  const firstVariant = product.variants[0];\n  return <Link to={`/products/${product.slug}`} className=\"group rounded-lg border p-4 hover:shadow-lg transition-shadow\">\n      <div className=\"aspect-square overflow-hidden rounded-md\">\n        <img src={firstVariant.image} alt={product.name} className=\"h-full w-full object-cover transition-transform group-hover:scale-105\" />\n      </div>\n      <div className=\"mt-4\">\n        <h3 className=\"text-lg font-semibold\">{product.name}</h3>\n        <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n          {product.description}\n        </p>\n        <p className=\"mt-2 font-medium\">From ${lowestPrice.toFixed(2)}</p>\n      </div>\n    </Link>;\n}\n_c = ProductCard;\nvar _c;\n$RefreshReg$(_c, \"ProductCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,gBAAuB;;;ACKf;AA3BR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiC;AACjC,cAAY,IAAI,eAAe;AACjC;AAIe,SAAR,YAA6B;AAAA,EAClC;AACF,GAAG;AACD,QAAM,cAAc,KAAK,IAAI,GAAG,QAAQ,SAAS,IAAI,OAAK,EAAE,KAAK,CAAC;AAClE,QAAM,eAAe,QAAQ,SAAS,CAAC;AACvC,SAAO,mDAAC,QAAK,IAAI,aAAa,QAAQ,QAAQ,WAAU,iEACpD;AAAA,uDAAC,SAAI,WAAU,4CACb,6DAAC,SAAI,KAAK,aAAa,OAAO,KAAK,QAAQ,MAAM,WAAU,2EAA3D;AAAA;AAAA;AAAA;AAAA,WAAmI,KADrI;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,SAAI,WAAU,QACb;AAAA,yDAAC,QAAG,WAAU,yBAAyB,kBAAQ,QAA/C;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,MACpD,mDAAC,OAAE,WAAU,iDACV,kBAAQ,eADX;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,OAAE,WAAU,oBAAmB;AAAA;AAAA,QAAO,YAAY,QAAQ,CAAC;AAAA,WAA5D;AAAA;AAAA;AAAA;AAAA,aAA8D;AAAA,SALhE;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAVG;AAAA;AAAA;AAAA;AAAA,SAWL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADDhB,IAAAA,0BAAA;AA1CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAmBe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,oDAAC,SAAI,WAAU,kBAClB;AAAA,wDAAC,QAAG,WAAU,2BAA0B,iCAAxC;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,oDAAC,SAAI,WAAU,wDACZ,mBAAS,IAAI,aAAW,oDAAC,eAA6B,WAAZ,QAAQ,IAA1B;AAAA;AAAA;AAAA;AAAA,WAAgD,CAAE,KAD7E;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_jsx_dev_runtime", "_c"]
}
